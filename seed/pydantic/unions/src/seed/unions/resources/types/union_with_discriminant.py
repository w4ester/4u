# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

from .bar import Bar
from .foo import Foo

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class UnionWithDiscriminant_Foo(pydantic.BaseModel):
    type: typing.Literal["foo"] = pydantic.Field(alias="_type", default="foo")
    foo: Foo

    class Config:
        allow_population_by_field_name = True
        populate_by_name = True


class UnionWithDiscriminant_Bar(pydantic.BaseModel):
    type: typing.Literal["bar"] = pydantic.Field(alias="_type", default="bar")
    bar: Bar

    class Config:
        allow_population_by_field_name = True
        populate_by_name = True


UnionWithDiscriminant = typing.Union[UnionWithDiscriminant_Foo, UnionWithDiscriminant_Bar]
